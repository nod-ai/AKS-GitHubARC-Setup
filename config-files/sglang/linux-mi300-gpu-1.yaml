# Cluster: AKS pduks-dcgpu-app-aks1
# Deployment command:
# sudo helm upgrade --install "linux-mi300-gpu-1"     --namespace "arc-sglang-gpu-1" oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set -f <path-to-this-file>


## minRunners is the min number of idle runners. The target number of runners created will be
## calculated as a sum of minRunners and the number of jobs assigned to the scale set.
minRunners: 3
githubConfigUrl: "https://github.com/sgl-project/sglang"
githubConfigSecret:
  github_token: "<github token>"
controllerServiceAccount:
  name: arc-gha-rs-controller
  namespace: arc-systems

template:
  spec:
    securityContext:
      supplementalGroups:
        - 110
    initContainers:
      - name: init-dind-externals
        image: ghcr.io/saienduri/ghascale-rocm-dev:main
        imagePullPolicy: Always
        command:
          ["cp", "-r", "/home/runner/externals/.", "/home/runner/tmpDir/"]
        volumeMounts:
          - name: dind-externals
            mountPath: /home/runner/tmpDir
      - name: dind
        image: ghcr.io/saienduri/dind:main
        restartPolicy: Always
        command: ["sh", "-c"]
        args:
          - |
            dockerd --host=unix:///var/run/docker.sock --group=${DOCKER_GROUP_GID} --data-root=/home/runner/docker-data &
            until docker info >/dev/null 2>&1; do sleep 5; done
            tail -f /dev/null
        env:
          - name: DOCKER_GROUP_GID
            value: "123"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        securityContext:
          privileged: true
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: dind-sock
            mountPath: /var/run
          - name: dind-externals
            mountPath: /home/runner/externals
          - name: podinfo
            mountPath: /etc/podinfo
          - name: docker-data
            mountPath: /home/runner/docker-data
            subPathExpr: $(POD_NAME)-docker
        lifecycle:
          preStop:
            exec:
              command: ["rm", "-rf", "/home/runner/docker-data"]
    containers:
      - name: runner
        image: ghcr.io/saienduri/ghascale-rocm-dev:main
        imagePullPolicy: Always
        command:
          - /bin/sh
          - -c
          - |
            devices=$(ls -la /dev/dri/ | grep renderD | awk '{print $10}')
            GHA_RENDER_DEVICES="--group-add 110"
            for device in $devices; do
              GHA_RENDER_DEVICES="${GHA_RENDER_DEVICES} --device /dev/dri/${device}"
            done
            echo "${GHA_RENDER_DEVICES}" > /etc/podinfo/gha-render-devices
            # Wait for Docker to be ready before starting runner
            echo "Waiting for docker..."
            until docker info >/dev/null 2>&1; do sleep 5; done
            docker login -u rocmshared -p <docker_token>
            /home/runner/run.sh
        resources:
          requests:
            cpu: 10000m
            memory: 200000Mi
            ephemeral-storage: 150Gi
            amd.com/gpu: 1
          limits:
            amd.com/gpu: 1
            ephemeral-storage: 150Gi
        env:
          - name: DOCKER_HOST
            value: unix:///var/run/docker.sock
          - name: HF_TOKEN
            value: <hf token>
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: dind-sock
            mountPath: /var/run
          - name: dind-externals
            mountPath: /home/runner/externals
          - name: podinfo
            mountPath: /etc/podinfo
          - name: docker-data
            mountPath: /home/runner/docker-data
            subPathExpr: $(POD_NAME)-docker
    volumes:
      - name: work
        emptyDir: {}
      - name: dind-sock
        emptyDir: {}
      - name: dind-externals
        emptyDir: {}
      - name: docker-data
        emptyDir: {}
      - name: podinfo
        emptyDir: {}